@using CodeFirstApiUI.Enums
@model CodeFirstApiUI.Models.VMs.BookVMs.BookCreateVM
@{
    List<string> genreNames = Enum.GetNames<BookGenre>().ToList();
}

@{
    Layout = "_Layout";
}

<div class="row">
    <div class="col-lg-12">
        <form asp-action=@ViewBag.Baslik>
            <div class="row">
                <div class="col-lg-6">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Author" class="control-label"></label>
                        @Html.DropDownListFor(x => x.Author, Model.Authors, new { @class = "form-select" })
                        <span asp-validation-for="Author" class="text-danger"></span>
                    </div>
                    <div class="form-group mt-2">
                        <input type="submit" value=@ViewBag.Baslik class="btn btn-primary" />
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="accordion" id="accordionExample">
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                    Kitap Türü
                                </button>
                            </h2>
                            <div id="collapseTwo" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
                                <div class="accordion-body">
                                    <ul class="flex-column">
                                        @foreach (var item in genreNames)
                                        {
                                            if (Model.Genres.Contains(item))
                                            {
                                                <li>
                                                    <input id="@item" type="checkbox" name="type" value="@item" checked />
                                                    <label class="form-check-label" for="@item">@item</label>
                                                </li>
                                            }
                                            else
                                            {
                                                <li>
                                                    <input id="@item" type="checkbox" name="type" value="@item"/>
                                                    <label class="form-check-label" for="@item">@item</label>
                                                </li>
                                            }
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}